--
-- Name: app_public; Type: SCHEMA; Schema: -; Owner: -
--

drop schema if exists app_public cascade;
create schema app_public;

drop role if exists authenticated;
create role authenticated;

grant usage on schema app_public to authenticated;

CREATE TABLE app_public.files (
    id integer primary key generated by default as identity,
    name text NOT NULL
);
comment on table app_public.files is E'@behavior +single';

grant select on table app_public.files to authenticated;

CREATE TABLE app_public.file_versions (
    id integer primary key generated by default as identity,
    file_id integer references app_public.files(id) ON DELETE CASCADE NOT NULL,
    created_at timestamptz DEFAULT now() NOT NULL
);

grant select on table app_public.file_versions to authenticated;

create function app_public.files_file_version_created_at(
    file app_public.files,
    version app_public.file_versions
) returns timestamptz as $$
  select fv.created_at
    from app_public.file_versions fv
    where fv.file_id = file.id
      and fv.id = version.id;
$$ language sql stable set search_path from current;

-- you can reproduce the issue with or without the comment below:
comment on function app_public.files_file_version_created_at is E'arg1variant nodeId';

insert into app_public.files (id, name) values (0, 'example.txt');
insert into app_public.file_versions (file_id) values (0);